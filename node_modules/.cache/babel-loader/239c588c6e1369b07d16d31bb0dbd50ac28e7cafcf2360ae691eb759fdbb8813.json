{"ast":null,"code":"var _jsxFileName = \"/home/joan/\\xC1rea de Trabalho/development/projects/chat_app/src/components/Input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { arrayUnion, doc, serverTimestamp, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { ref as storageRef, uploadBytes as upload, getDownloadURL as getURL, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { async } from \"@firebase/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid);\n      const uploadTask = uploadBytesResumable(storage, img);\n      const date = new Date().getTime();\n      const refstorageRef = storageRef(storage, `${uuid + date}`);\n      uploadTask.on(error => {\n        setErr(true);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async);\n      });\n      await upload(refstorageRef, img).then(() => {\n        getURL(refstorageRef).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          display: \"none\"\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"LxBGUThHibwmApaPJomxIOCeC+Y=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useContext","useState","Img","Attach","AuthContext","ChatContext","arrayUnion","doc","serverTimestamp","Timestamp","updateDoc","db","storage","v4","uuid","ref","storageRef","uploadBytes","upload","getDownloadURL","getURL","uploadBytesResumable","async","Input","text","setText","img","setImg","currentUser","data","handleSend","uploadTask","date","Date","getTime","refstorageRef","on","error","setErr","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","now","user","e","target","value","display","files"],"sources":["/home/joan/Área de Trabalho/development/projects/chat_app/src/components/Input.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport {\n  arrayUnion,\n  doc,\n  serverTimestamp,\n  Timestamp,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  ref as storageRef,\n  uploadBytes as upload,\n  getDownloadURL as getURL,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport { async } from \"@firebase/util\";\n\nconst Input = () => {\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const { currentUser } = useContext(AuthContext);\n  const { data } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid)\n      const uploadTask = uploadBytesResumable(storage, img)\n\n      const date = new Date().getTime();\n      const refstorageRef = storageRef(storage, `${uuid + date}`);\n\n      uploadTask.on(\n        (error) => {\n          setErr(true);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async)\n        }\n      )\n      await upload(refstorageRef, img).then(() => {\n        getURL(refstorageRef).then(async (downloadURL) => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL,\n            }),\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now(),\n        }),\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text,\n      },\n      [data.chatId + \".date\"]: serverTimestamp(),\n    });\n\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text,\n      },\n      [data.chatId + \".date\"]: serverTimestamp(),\n    });\n\n    setText(\"\");\n    setImg(null);\n  };\n  return (\n    <div className=\"input\">\n      <input\n        type=\"text\"\n        placeholder=\"Type something...\"\n        onChange={(e) => setText(e.target.value)}\n        value={text}\n      />\n      <div className=\"send\">\n        <img src={Attach} alt=\"\" />\n        <input\n          type=\"text\"\n          style={{ display: \"none\" }}\n          id=\"file\"\n          onChange={(e) => setImg(e.target.files[0])}\n        />\n        <label htmlFor=\"file\">\n          <img src={Img} alt=\"\" />\n        </label>\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}