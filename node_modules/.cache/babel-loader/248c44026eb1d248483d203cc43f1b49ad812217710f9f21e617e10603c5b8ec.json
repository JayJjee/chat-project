{"ast":null,"code":"import _slicedToArray from\"/home/joan/\\xC1rea de Trabalho/development/projects/chat_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useContext,useReducer}from\"react\";import{AuthContext}from\"./AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ChatContext=/*#__PURE__*/createContext();export var ChatContextProvider=function ChatContextProvider(_ref){var children=_ref.children;var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;var INITIAL_STATE={chatId:\"null\",user:{}};var chatReducer=function chatReducer(state,action){switch(action.type){case\"CHANGE_USER\":return{user:action.payload,chatId:currentUser.uid>action.payload.uid?currentUser.uid+action.payload.uid:action.payload.uid+currentUser.uid};default:return state;}};var _useReducer=useReducer(chatReducer,INITIAL_STATE),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ChatContext.Provider,{value:{data:state,dispatch:dispatch},children:children});};","map":{"version":3,"names":["createContext","useContext","useReducer","AuthContext","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","dispatch","data"],"sources":["/home/joan/Área de Trabalho/development/projects/chat_app/src/context/ChatContext.js"],"sourcesContent":["import { createContext, useContext, useReducer} from \"react\";\nimport { AuthContext } from \"./AuthContext\";\n\nexport const ChatContext = createContext()\n\n\nexport const ChatContextProvider = ({ children }) => {\n    const { currentUser } = useContext(AuthContext)\n    const INITIAL_STATE = {\n        chatId: \"null\",\n        user: {}\n    }\n\n    const chatReducer = (state, action) => {\n        switch (action.type) {\n            case \"CHANGE_USER\":\n                return {\n                    user: action.payload,\n                    chatId:\n                        currentUser.uid > action.payload.uid\n                            ? currentUser.uid + action.payload.uid\n                            : action.payload.uid + currentUser.uid\n                }\n            default:\n                return state;\n        }\n    }\n\n    const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE)\n\n    return (\n        <ChatContext.Provider value={{ data: state, dispatch }}>\n            {children}\n        </ChatContext.Provider>\n    )\n}"],"mappings":"kJAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAO,OAAO,CAC5D,OAASC,WAAW,KAAQ,eAAe,CAAC,2CAE5C,MAAO,IAAMC,YAAW,cAAGJ,aAAa,EAAE,CAG1C,MAAO,IAAMK,oBAAmB,CAAG,QAAtBA,oBAAmB,MAAqB,IAAfC,SAAQ,MAARA,QAAQ,CAC1C,gBAAwBL,UAAU,CAACE,WAAW,CAAC,CAAvCI,WAAW,aAAXA,WAAW,CACnB,GAAMC,cAAa,CAAG,CAClBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,CAAC,CACX,CAAC,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,KAAK,CAAEC,MAAM,CAAK,CACnC,OAAQA,MAAM,CAACC,IAAI,EACf,IAAK,aAAa,CACd,MAAO,CACHJ,IAAI,CAAEG,MAAM,CAACE,OAAO,CACpBN,MAAM,CACFF,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CAC9BT,WAAW,CAACS,GAAG,CAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,CACpCH,MAAM,CAACE,OAAO,CAACC,GAAG,CAAGT,WAAW,CAACS,GAC/C,CAAC,CACL,QACI,MAAOJ,MAAK,CAAC,CAEzB,CAAC,CAED,gBAA0BV,UAAU,CAACS,WAAW,CAAEH,aAAa,CAAC,4CAAzDI,KAAK,iBAAEK,QAAQ,iBAEtB,mBACI,KAAC,WAAW,CAAC,QAAQ,EAAC,KAAK,CAAE,CAAEC,IAAI,CAAEN,KAAK,CAAEK,QAAQ,CAARA,QAAS,CAAE,UAClDX,QAAQ,EACU,CAE/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}